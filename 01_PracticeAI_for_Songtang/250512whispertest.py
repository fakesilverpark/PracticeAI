# -*- coding: utf-8 -*-
"""whisper.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18au6wfven4y2JXgfndSlNViPu-axKg65

# Set Up
We used Python 3.9.9 and PyTorch 1.10.1 to train and test our models, but the codebase is expected to be compatible with Python 3.8-3.11 and recent PyTorch versions. The codebase also depends on a few Python packages, most notably OpenAI's tiktoken for their fast tokenizer implementation. You can download and install (or update to) the latest release of Whisper with the following command:

해당 모델을 개발 할때 Python 3.9.9 PyTorch 1.10.1 을 사용함
하지만 실제로 사용할때는 Python 3.8 - 3.11, 최신 PyTorch 버전도 문제 없음
"""

# 파이썬 버전 확인
# !python --version
#
# # PyTorch 다운로드
# !pip install torch torchvision torchaudio
#
# # Pytorch 버전 확인
# import torch
# print(torch.__version__)
#
# # whisper 모델 다운로드
# !pip install -U openai-whisper
#
# # 코랩 환경
# !apt update && apt install -y ffmpeg
#
# !whisper audio.flac audio.mp3 audio.wav --model tiny
#
# !whisper korean.wav --language korean

import whisper

# 오디오
audio1 = "/content/test1.m4a"
audio2 = "/content/test2.m4a"

# 모델
model1 = whisper.load_model("tiny")
model2 = whisper.load_model("base")
model3 = whisper.load_model("small")

from difflib import SequenceMatcher

# 유사도 분석
def f(whisper_ver, off_ver):
    whisper_lyrics = whisper_ver
    official_lyrics = off_ver

    similarity_ratio = SequenceMatcher(None, whisper_lyrics.lower(), official_lyrics.lower()).ratio() * 100
    print(similarity_ratio)

result = model1.transcribe(audio1, language='ko')
with open('/content/lyrics.txt', 'w', encoding='utf-8') as f:
    f.write(result['text'])
print(result["text"])

# -> 모델 크기가 너무 작은 탓인지, 한글이라서인지 만족스러운 결과를 얻기 어려웠다
# -> 팝송으로 다시 해보겠습니다

result = model1.transcribe(audio2)
print(result["text"])

# -> 영어도 오류가 많았다
# -> 모델을 한 단계 올려서 해보겠습니다

result = model2.transcribe(audio2)
print(result["text"])

# -> 비슷해보였지만 실제로 확인해본 결과 다른 부분이 많았다 2.82% 의 유사도
# -> 시간도 너무 오래 걸린다

result = model3.transcribe(audio2)
print(result["text"])

# 유사도 분석
f(result["text"], )

import requests

url = "https://api.musixmatch.com/ws/1.1/matcher.lyrics.get"

querystring = {"q_track":"시간을 달려서","q_artist":"여자친구"}

response = requests.request("GET", url, params=querystring)

print(response.text)